spring:
  application:
    name: s-c-g
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          filters[0]:
            name: StripPrefix
            args[parts]: 1
          filters[1]:
            name: TokenRelay
            # TODO Hystrix, fallback
  security:
    oauth2:
      loginPath: /login
      client:
        registration:
          scg:
            provider: uaa
            client-id: example_id
            client-secret: example_secret
            authorization-grant-type: password
            scope: read,write
            min-token-expiration-seconds-to-refresh: 50
        provider:
          uaa:
            token-uri: http://uaa-service/oauth/token
            jwt-key-value: |
              -----BEGIN PUBLIC KEY-----
              MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhr48B5ICsfOIfd4S/+x1j+pKpLcxKsiiF1J7jbZeneTRMKL+peZCnrvLCqKAODyir5AyYKqv8T1PnczfOceif+zKJ0cTr4Lmz7I0P1lEhakpjJIxAGtWktPtKWX3ZK7uX8galzOYhcWeOPYL+MJIUSkwRA2pdIsjC8wf/6qIaz19C8URNG1ciBirXre5Ambd6guQ5hKKnzWMZdz77lAKbpVK2RRIY6+5r0BR/NxMcn5Lgp7ZzBFA+nwCaqRnKFPbjceKBQzNY7wKut/TvdQCIW6btdU6/WT8IOY5HIOqCAyq/BQmU2jOM0WGhvcl2NOgLI0vdZ1oC0Uu34HG+YgQLwIDAQAB
              -----END PUBLIC KEY-----

server:
  port: 9999

logging:
  level:
    root: INFO
#    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.cloud.gateway: INFO

# Define the Eureka server that handles service registration
eureka:
  instance:
    hostname: localhost
    port: 8761
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/